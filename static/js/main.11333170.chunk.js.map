{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","robots.js","containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","_ref","name","id","email","react_default","a","createElement","className","src","concat","alt","CardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onsearchChange","event","setState","serachfield","target","value","state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oLAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wGCESC,EAZF,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,GAAIC,EAAaH,EAAbG,MACxB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,uDACfH,EAAAC,EAAAC,cAAA,OAAKE,IAAG,wBAAAC,OAA0BP,EAA1B,YAAwCQ,IAAI,UACpDN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,SAAIH,MCCGQ,EAZE,SAAAX,GAAc,IAAZY,EAAYZ,EAAZY,OACjB,OACER,EAAAC,EAAAC,cAAA,WACGM,EAAOC,IAAI,SAACC,EAAMC,GACjB,OACEX,EAAAC,EAAAC,cAAEU,EAAF,CAAOC,IAAKF,EAAGb,GAAIY,EAAKZ,GAAID,KAAMa,EAAKb,KAAME,MAAOW,EAAKX,YCKpDe,EAXG,SAAAlB,GAAoB,IAAlBmB,EAAkBnB,EAAlBmB,aAClB,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wCACjBa,KAAK,SACLC,YAAY,mBACZC,SAAUH,MCGDI,EATA,SAACC,GACd,OACEpB,EAAAC,EAAAC,cAAA,OAAKmB,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACpEJ,EAAMK,WCkjBGjB,EAlfD,CACT,CACEV,GAAM,EACND,KAAQ,iBACRE,MAAS,8BAEX,CACED,GAAM,EACND,KAAQ,kBACRE,MAAS,+BAEX,CACED,GAAM,EACND,KAAQ,eACRE,MAAS,4BAEX,CACED,GAAM,EACND,KAAQ,cACRE,MAAS,2BAEX,CACED,GAAM,EACND,KAAQ,iBACRE,MAAS,8BAEX,CACED,GAAM,EACND,KAAQ,iBACRE,MAAS,8BAEX,CACED,GAAM,EACND,KAAQ,gBACRE,MAAS,6BAEX,CACED,GAAM,EACND,KAAQ,iBACRE,MAAS,8BAEX,CACED,GAAM,EACND,KAAQ,gBACRE,MAAS,6BAEX,CACED,GAAM,EACND,KAAQ,cACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,kBACRE,MAAS,+BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,6BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,6BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,6BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,8BAEX,CACED,GAAM,GACND,KAAQ,cACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,8BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,6BAEb,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,aACRE,MAAS,wBAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,oBACRE,MAAS,+BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,YACRE,MAAS,uBAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,0BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,0BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,0BAEX,CACED,GAAM,GACND,KAAQ,aACRE,MAAS,wBAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,oBACRE,MAAS,+BAEX,CACED,GAAM,GACND,KAAQ,cACRE,MAAS,yBAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,0BAEX,CACED,GAAM,GACND,KAAQ,cACRE,MAAS,yBAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,cACRE,MAAS,yBAEX,CACED,GAAM,GACND,KAAQ,cACRE,MAAS,yBAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,kBACRE,MAAS,6BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,0BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,cACRE,MAAS,yBAEX,CACED,GAAM,GACND,KAAQ,aACRE,MAAS,wBAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,0BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,0BAEX,CACED,GAAM,GACND,KAAQ,mBACRE,MAAS,8BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,mBACRE,MAAS,8BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,kBACRE,MAAS,6BAEX,CACED,GAAM,GACND,KAAQ,kBACRE,MAAS,6BAEX,CACED,GAAM,GACND,KAAQ,uBACRE,MAAS,kCAEX,CACED,GAAM,GACND,KAAQ,cACRE,MAAS,yBAEX,CACED,GAAM,GACND,KAAQ,mBACRE,MAAS,8BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,0BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,0BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,cACRE,MAAS,yBAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,cACRE,MAAS,yBAEX,CACED,GAAM,GACND,KAAQ,kBACRE,MAAS,6BAEX,CACED,GAAM,GACND,KAAQ,mBACRE,MAAS,8BAEX,CACED,GAAM,GACND,KAAQ,mBACRE,MAAS,8BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,kBACRE,MAAS,6BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,cACRE,MAAS,yBAEX,CACED,GAAM,GACND,KAAQ,kBACRE,MAAS,6BAEX,CACED,GAAM,GACND,KAAQ,kBACRE,MAAS,6BAEX,CACED,GAAM,GACND,KAAQ,kBACRE,MAAS,6BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,eACRE,MAAS,0BAEX,CACED,GAAM,GACND,KAAQ,aACRE,MAAS,wBAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,4BAEX,CACED,GAAM,GACND,KAAQ,gBACRE,MAAS,2BAEX,CACED,GAAM,GACND,KAAQ,mBACRE,MAAS,8BAEX,CACED,GAAM,GACND,KAAQ,iBACRE,MAAS,6BC/fA2B,cA7Cb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAoBFI,eAAiB,SAACC,GAChBR,EAAKS,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SApB1CZ,EAAKa,MAAQ,CAEXH,YAAa,IAJJV,wEAyBL,IAECU,EAAeP,KAAKU,MAApBH,YACDI,EAAiBjC,EAAOkC,OAAO,SAAAC,GACnC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASR,EAAYO,iBAEvD,OAAQpC,EAAOsC,OAGX9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,iBACAH,EAAAC,EAAAC,cAAC6C,EAAD,CAAWhC,aAAce,KAAKI,iBAC9BlC,EAAAC,EAAAC,cAAC8C,EAAD,KACEhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAUzC,OAAQiC,MANxBzC,EAAAC,EAAAC,cAAA,4BAjCYgD,mBCMlBC,IAASC,OAAQpD,EAAAC,EAAAC,cAAEmD,EAAF,MAASC,SAASC,eAAe,SPqH5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.11333170.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\n\n// Distructuring from ES6;\n// const Card = (props) => {\n//   const {name, id, email} = props;\n\n// distructuring further!!!\nconst Card = ({ name, id, email } ) => {\n  return (\n    <div className = \"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robot\"/>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n\n// Matt Bowler\n// Katelyn Vo\n// Eduard Dean\n// Aniqa Nichols\n// Poppie French\n// Leah Battle\n// Aliya Bond\n// Jess Barker\n// Shanna Li\n// Waseem Gonzale","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          < Card key={i} id={user.id} name={user.name} email={user.email} />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n  return (\n    <div className = \"pa2\">\n      <input className=\"bg-lightest-blue ba b--green ma2 pa3 \"\n      type=\"search\"\n      placeholder=\"search robots...\"\n      onChange={searchChange}/>\n    </div>\n  )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style = {{overflowY: 'scroll', border: '5px solid black', height: '450px' }}>\n      {props.children}\n    </div>\n  )\n}\n\n\nexport default Scroll;","// export const robots = [\n//   {\n//     id: 1,\n//     name: 'Bowei Yao',\n//     username: 'Bret',\n//     email: 'Sincere@april.biz'\n//   },\n//   {\n//     id: 2,\n//     name: 'Ervin Howell',\n//     username: 'Antonette',\n//     email: 'Shanna@melissa.tv'\n//   },\n//   {\n//     id: 3,\n//     name: 'Clementine Bauch',\n//     username: 'Samantha',\n//     email: 'Nathan@yesenia.net'\n//   },\n//   {\n//     id: 4,\n//     name: 'Patricia Lebsack',\n//     username: 'Karianne',\n//     email: 'Julianne.OConner@kory.org'\n//   },\n//   {\n//     id: 5,\n//     name: 'Chelsey Dietrich',\n//     username: 'Kamren',\n//     email: 'Lucio_Hettinger@annie.ca'\n//   },\n//   {\n//     id: 6,\n//     name: 'Mrs. Dennis Schulist',\n//     username: 'Leopoldo_Corkery',\n//     email: 'Karley_Dach@jasper.info'\n//   },\n//   {\n//     id: 7,\n//     name: 'Kurtis Weissnat',\n//     username: 'Elwyn.Skiles',\n//     email: 'Telly.Hoeger@billy.biz'\n//   },\n//   {\n//     id: 8,\n//     name: 'Nicholas Runolfsdottir V',\n//     username: 'Maxime_Nienow',\n//     email: 'Sherwood@rosamond.me'\n//   },\n//   {\n//     id: 9,\n//     name: 'Glenna Reichert',\n//     username: 'Delphine',\n//     email: 'Chaim_McDermott@dana.io'\n//   },\n//   {\n//     id: 10,\n//     name: 'Clementina DuBuque',\n//     username: 'Moriah.Stanton',\n//     email: 'Rey.Padberg@karina.biz'\n//   }\n// ];\n\n\n\n\n\n// export default robots;\n\nconst robots = [\n      {\n        \"id\": 0,\n        \"name\": \"Susanna Bright\",\n        \"email\": \"susannabright@sustenza.com\"\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Woodward Robles\",\n        \"email\": \"woodwardrobles@sustenza.com\"\n      },\n      {\n        \"id\": 2,\n        \"name\": \"Colette Holt\",\n        \"email\": \"coletteholt@sustenza.com\"\n      },\n      {\n        \"id\": 3,\n        \"name\": \"Tanya Simon\",\n        \"email\": \"tanyasimon@sustenza.com\"\n      },\n      {\n        \"id\": 4,\n        \"name\": \"Mathews Flores\",\n        \"email\": \"mathewsflores@sustenza.com\"\n      },\n      {\n        \"id\": 5,\n        \"name\": \"Bender Higgins\",\n        \"email\": \"benderhiggins@sustenza.com\"\n      },\n      {\n        \"id\": 6,\n        \"name\": \"Lara Garrison\",\n        \"email\": \"laragarrison@sustenza.com\"\n      },\n      {\n        \"id\": 7,\n        \"name\": \"Josephine Ware\",\n        \"email\": \"josephineware@sustenza.com\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Adkins Briggs\",\n        \"email\": \"adkinsbriggs@sustenza.com\"\n      },\n      {\n        \"id\": 9,\n        \"name\": \"Jamie Cline\",\n        \"email\": \"jamiecline@sustenza.com\"\n      },\n      {\n        \"id\": 10,\n        \"name\": \"Mcknight Gamble\",\n        \"email\": \"mcknightgamble@sustenza.com\"\n      },\n      {\n        \"id\": 11,\n        \"name\": \"Lindsay Olson\",\n        \"email\": \"lindsayolson@sustenza.com\"\n      },\n      {\n        \"id\": 12,\n        \"name\": \"Margret Parks\",\n        \"email\": \"margretparks@sustenza.com\"\n      },\n      {\n        \"id\": 13,\n        \"name\": \"Kelley Hughes\",\n        \"email\": \"kelleyhughes@sustenza.com\"\n      },\n      {\n        \"id\": 14,\n        \"name\": \"Amparo Pittman\",\n        \"email\": \"amparopittman@sustenza.com\"\n      },\n      {\n        \"id\": 15,\n        \"name\": \"Lee Shields\",\n        \"email\": \"leeshields@sustenza.com\"\n      },\n      {\n        \"id\": 16,\n        \"name\": \"Meadows Cruz\",\n        \"email\": \"meadowscruz@sustenza.com\"\n      },\n      {\n        \"id\": 17,\n        \"name\": \"Barr Charles\",\n        \"email\": \"barrcharles@sustenza.com\"\n      },\n      {\n        \"id\": 18,\n        \"name\": \"Aguirre Bryant\",\n        \"email\": \"aguirrebryant@sustenza.com\"\n      },\n      {\n        \"id\": 19,\n        \"name\": \"Althea Dudley\",\n        \"email\": \"altheadudley@sustenza.com\"\n      },\n    {\n      \"id\": 21,\n      \"name\": \"Mendez Blevins\",\n      \"email\": \"mendezblevins@exodoc.com\"\n    },\n    {\n      \"id\": 22,\n      \"name\": \"Naomi Rosa\",\n      \"email\": \"naomirosa@exodoc.com\"\n    },\n    {\n      \"id\": 23,\n      \"name\": \"Taylor Monroe\",\n      \"email\": \"taylormonroe@exodoc.com\"\n    },\n    {\n      \"id\": 24,\n      \"name\": \"Pitts Santiago\",\n      \"email\": \"pittssantiago@exodoc.com\"\n    },\n    {\n      \"id\": 25,\n      \"name\": \"Joanna Mcleod\",\n      \"email\": \"joannamcleod@exodoc.com\"\n    },\n    {\n      \"id\": 26,\n      \"name\": \"Golden Pennington\",\n      \"email\": \"goldenpennington@exodoc.com\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Irwin Delgado\",\n      \"email\": \"irwindelgado@exodoc.com\"\n    },\n    {\n      \"id\": 28,\n      \"name\": \"Kate Kemp\",\n      \"email\": \"katekemp@exodoc.com\"\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Sonja Elliott\",\n      \"email\": \"sonjaelliott@exodoc.com\"\n    },\n    {\n      \"id\": 30,\n      \"name\": \"Alvarez Downs\",\n      \"email\": \"alvarezdowns@exodoc.com\"\n    },\n    {\n      \"id\": 31,\n      \"name\": \"Brittney Mills\",\n      \"email\": \"brittneymills@exodoc.com\"\n    },\n    {\n      \"id\": 32,\n      \"name\": \"Wynn Stevenson\",\n      \"email\": \"wynnstevenson@exodoc.com\"\n    },\n    {\n      \"id\": 33,\n      \"name\": \"Guerrero Frank\",\n      \"email\": \"guerrerofrank@exodoc.com\"\n    },\n    {\n      \"id\": 34,\n      \"name\": \"Frieda Hurst\",\n      \"email\": \"friedahurst@exodoc.com\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Phyllis Head\",\n      \"email\": \"phyllishead@exodoc.com\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"Nora Anthony\",\n      \"email\": \"noraanthony@exodoc.com\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Ina Dawson\",\n      \"email\": \"inadawson@exodoc.com\"\n    },\n    {\n      \"id\": 38,\n      \"name\": \"Steele Spence\",\n      \"email\": \"steelespence@exodoc.com\"\n    },\n    {\n      \"id\": 39,\n      \"name\": \"Robertson Flowers\",\n      \"email\": \"robertsonflowers@exodoc.com\"\n    },\n    {\n      \"id\": 40,\n      \"name\": \"Ora Hubbard\",\n      \"email\": \"orahubbard@exodoc.com\"\n    },\n    {\n      \"id\": 41,\n      \"name\": \"Roxie Randolph\",\n      \"email\": \"roxierandolph@exodoc.com\"\n    },\n    {\n      \"id\": 42,\n      \"name\": \"Weber Roberts\",\n      \"email\": \"weberroberts@exodoc.com\"\n    },\n    {\n      \"id\": 43,\n      \"name\": \"Shannon Moon\",\n      \"email\": \"shannonmoon@exodoc.com\"\n    },\n    {\n      \"id\": 44,\n      \"name\": \"Sosa Prince\",\n      \"email\": \"sosaprince@exodoc.com\"\n    },\n    {\n      \"id\": 45,\n      \"name\": \"Clay Marshall\",\n      \"email\": \"claymarshall@exodoc.com\"\n    },\n    {\n      \"id\": 46,\n      \"name\": \"Ingram Molina\",\n      \"email\": \"ingrammolina@exodoc.com\"\n    },\n    {\n      \"id\": 47,\n      \"name\": \"Michelle Vance\",\n      \"email\": \"michellevance@exodoc.com\"\n    },\n    {\n      \"id\": 48,\n      \"name\": \"Concetta Kerr\",\n      \"email\": \"concettakerr@exodoc.com\"\n    },\n    {\n      \"id\": 49,\n      \"name\": \"Janell Pope\",\n      \"email\": \"janellpope@exodoc.com\"\n    },\n    {\n      \"id\": 50,\n      \"name\": \"Stout Riggs\",\n      \"email\": \"stoutriggs@exodoc.com\"\n    },\n    {\n      \"id\": 51,\n      \"name\": \"Odessa Barber\",\n      \"email\": \"odessabarber@exodoc.com\"\n    },\n    {\n      \"id\": 52,\n      \"name\": \"Audra Charles\",\n      \"email\": \"audracharles@exodoc.com\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Aurelia Chapman\",\n      \"email\": \"aureliachapman@exodoc.com\"\n    },\n    {\n      \"id\": 54,\n      \"name\": \"Nita Gilmore\",\n      \"email\": \"nitagilmore@exodoc.com\"\n    },\n    {\n      \"id\": 55,\n      \"name\": \"Mcmahon Small\",\n      \"email\": \"mcmahonsmall@exodoc.com\"\n    },\n    {\n      \"id\": 56,\n      \"name\": \"Lynette Herman\",\n      \"email\": \"lynetteherman@exodoc.com\"\n    },\n    {\n      \"id\": 57,\n      \"name\": \"Alyson Aguirre\",\n      \"email\": \"alysonaguirre@exodoc.com\"\n    },\n    {\n      \"id\": 58,\n      \"name\": \"Walker Noel\",\n      \"email\": \"walkernoel@exodoc.com\"\n    },\n    {\n      \"id\": 59,\n      \"name\": \"Eaton Cole\",\n      \"email\": \"eatoncole@exodoc.com\"\n    },\n    {\n      \"id\": 60,\n      \"name\": \"Marisa Mercado\",\n      \"email\": \"marisamercado@exodoc.com\"\n    },\n    {\n      \"id\": 61,\n      \"name\": \"Frye Lancaster\",\n      \"email\": \"fryelancaster@exodoc.com\"\n    },\n    {\n      \"id\": 62,\n      \"name\": \"Marva Sellers\",\n      \"email\": \"marvasellers@exodoc.com\"\n    },\n    {\n      \"id\": 63,\n      \"name\": \"Vivian Price\",\n      \"email\": \"vivianprice@exodoc.com\"\n    },\n    {\n      \"id\": 64,\n      \"name\": \"Minnie Boyer\",\n      \"email\": \"minnieboyer@exodoc.com\"\n    },\n    {\n      \"id\": 65,\n      \"name\": \"Frederick Wooten\",\n      \"email\": \"frederickwooten@exodoc.com\"\n    },\n    {\n      \"id\": 66,\n      \"name\": \"Larson Randall\",\n      \"email\": \"larsonrandall@exodoc.com\"\n    },\n    {\n      \"id\": 67,\n      \"name\": \"Pickett Jacobson\",\n      \"email\": \"pickettjacobson@exodoc.com\"\n    },\n    {\n      \"id\": 68,\n      \"name\": \"Brenda Porter\",\n      \"email\": \"brendaporter@exodoc.com\"\n    },\n    {\n      \"id\": 69,\n      \"name\": \"Rollins Solomon\",\n      \"email\": \"rollinssolomon@exodoc.com\"\n    },\n    {\n      \"id\": 70,\n      \"name\": \"Sanders Tillman\",\n      \"email\": \"sanderstillman@exodoc.com\"\n    },\n    {\n      \"id\": 71,\n      \"name\": \"Fernandez Strickland\",\n      \"email\": \"fernandezstrickland@exodoc.com\"\n    },\n    {\n      \"id\": 72,\n      \"name\": \"Ashley Huff\",\n      \"email\": \"ashleyhuff@exodoc.com\"\n    },\n    {\n      \"id\": 73,\n      \"name\": \"Georgina Watkins\",\n      \"email\": \"georginawatkins@exodoc.com\"\n    },\n    {\n      \"id\": 74,\n      \"name\": \"Tamara Ayers\",\n      \"email\": \"tamaraayers@exodoc.com\"\n    },\n    {\n      \"id\": 75,\n      \"name\": \"Mayo Kennedy\",\n      \"email\": \"mayokennedy@exodoc.com\"\n    },\n    {\n      \"id\": 76,\n      \"name\": \"Shari Bradford\",\n      \"email\": \"sharibradford@exodoc.com\"\n    },\n    {\n      \"id\": 77,\n      \"name\": \"Janie Mason\",\n      \"email\": \"janiemason@exodoc.com\"\n    },\n    {\n      \"id\": 78,\n      \"name\": \"Alice Richard\",\n      \"email\": \"alicerichard@exodoc.com\"\n    },\n    {\n      \"id\": 79,\n      \"name\": \"Vaughn Hull\",\n      \"email\": \"vaughnhull@exodoc.com\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Nanette Herrera\",\n      \"email\": \"nanetteherrera@exodoc.com\"\n    },\n    {\n      \"id\": 81,\n      \"name\": \"Cherry Valentine\",\n      \"email\": \"cherryvalentine@exodoc.com\"\n    },\n    {\n      \"id\": 82,\n      \"name\": \"Cleveland Henson\",\n      \"email\": \"clevelandhenson@exodoc.com\"\n    },\n    {\n      \"id\": 83,\n      \"name\": \"Jean Campbell\",\n      \"email\": \"jeancampbell@exodoc.com\"\n    },\n    {\n      \"id\": 84,\n      \"name\": \"Richards Conrad\",\n      \"email\": \"richardsconrad@exodoc.com\"\n    },\n    {\n      \"id\": 85,\n      \"name\": \"Karyn Whitney\",\n      \"email\": \"karynwhitney@exodoc.com\"\n    },\n    {\n      \"id\": 86,\n      \"name\": \"Nelson Patton\",\n      \"email\": \"nelsonpatton@exodoc.com\"\n    },\n    {\n      \"id\": 87,\n      \"name\": \"Morgan Snyder\",\n      \"email\": \"morgansnyder@exodoc.com\"\n    },\n    {\n      \"id\": 88,\n      \"name\": \"Carlson Burch\",\n      \"email\": \"carlsonburch@exodoc.com\"\n    },\n    {\n      \"id\": 89,\n      \"name\": \"Reid Becker\",\n      \"email\": \"reidbecker@exodoc.com\"\n    },\n    {\n      \"id\": 90,\n      \"name\": \"Mccarthy Jacobs\",\n      \"email\": \"mccarthyjacobs@exodoc.com\"\n    },\n    {\n      \"id\": 91,\n      \"name\": \"Miller Matthews\",\n      \"email\": \"millermatthews@exodoc.com\"\n    },\n    {\n      \"id\": 92,\n      \"name\": \"Shelley Trevino\",\n      \"email\": \"shelleytrevino@exodoc.com\"\n    },\n    {\n      \"id\": 93,\n      \"name\": \"Connie Salinas\",\n      \"email\": \"conniesalinas@exodoc.com\"\n    },\n    {\n      \"id\": 94,\n      \"name\": \"Tasha Massey\",\n      \"email\": \"tashamassey@exodoc.com\"\n    },\n    {\n      \"id\": 95,\n      \"name\": \"Stacy Paul\",\n      \"email\": \"stacypaul@exodoc.com\"\n    },\n    {\n      \"id\": 96,\n      \"name\": \"Janelle Stokes\",\n      \"email\": \"janellestokes@exodoc.com\"\n    },\n    {\n      \"id\": 97,\n      \"name\": \"Adrian Dorsey\",\n      \"email\": \"adriandorsey@exodoc.com\"\n    },\n    {\n      \"id\": 98,\n      \"name\": \"Fletcher Vincent\",\n      \"email\": \"fletchervincent@exodoc.com\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Sofia Caldwell\",\n      \"email\": \"sofiacaldwell@exodoc.com\"\n    }\n  ]\n\n export default robots;\n","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll'\nimport robots from '../robots';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      // robots: [],\n      serachfield: \"\"\n    }\n  }\n\n  // get users name and email form jsonplaceholder api (only 10 users)\n  // componentDidMount(){\n  //   fetch('https://jsonplaceholder.typicode.com/users')\n  //     .then(response => response.json())\n  //     .then(users => {this.setState({robots : users})})\n  //     //this makes the page with 0 robot to show\n  //     // .then(users => {});\n  // }\n\n  // componentWillMount(){\n  //   console.log(\"componentWillMount\");\n  // }\n\n  onsearchChange = (event) => {\n    this.setState({ serachfield: event.target.value });\n  }\n\n  render(){\n    // const {robots, serachfield} = this.state; // destructuring \n    const {serachfield} = this.state; // destructuring \n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(serachfield.toLowerCase());\n    })\n    return !robots.length ?\n      <h1>loading</h1>:\n      (\n        <div className=\"tc\">\n          <h1 className=\"f1\">Robot Friends</h1>\n          <SearchBox searchChange={this.onsearchChange} />\n          <Scroll>\n            <CardList robots={filteredRobots} />\n          </Scroll>\n        </div>\n      )\n    }\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n// import Card from './Card';\nimport App from './containers/App';\nimport './containers/App.css';\n\n\n\nReactDOM.render( < App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}